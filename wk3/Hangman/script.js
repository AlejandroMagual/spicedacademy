/* PENDING CODE:
Make START button invisible after game starts.
Rename START button to START NEW GAME when game ends.
Display letters output goes into <pre> html element class "lettersDisplay"
Before games start, and also after game ends, hide buttons so user cannot press
   them by mistake and cause unwanted action.
Function "checkLetterInput" does not check for single-entry input.


*/

// Collection of words available for the game:
var wordLibrary = ['BANKRUPTCY','ENGAGEMENT'];   // Collection of words available for the game.

var wordArray = [];     // This array will contain the characters of the selected word.

// Indexes:
var indexHangman;   // integer (values 0 to 6) that counts the number of incorrect guesses at any
                    // time. It is initialized to "0" when "START" button is clicked on (see function
                    // "start"). It is also used (values 1 to 6) to draw the respective hangman
                    // stick figure section when an incorrect guess is made (see function "hangman").

var indexWord;      // array-index to select word to be guessed in the game from "wordLibrary".
                    // It is randomly generated by function "generateRandomIndex" when
                    // "START" button is clicked on (see function "start").

// Get <pre> HTML element, which will be updated to display the correctly guessed letters:
var correctLetters = document.getElementById('correctGuessDisplay');

// Get <pre> HTML element, which will be updated to display the worngly guessed letters:
var incorrectLetters = document.getElementById('incorrectGuessDisplay');


var guessStatus = [];   // boolean array of length same as wordArray; the positions where the letter
                        // has been guessed correctly are assigned "true"

// Miscellaneous Variables:
var numberOfLetters;    // the number of letters in selected word. It is defined when "START"
                        // button is clicked on (see function "start").

// Hangman stick figure's frame, rope and floor are always visible:
var context = document.getElementById('canv').getContext('2d');
context.strokeStyle = '#000';
context.lineWidth = 5;
context.beginPath();
    // Rope and Frame
    context.moveTo(250,70);
    context.lineTo(250,10);
    context.lineTo(450,10);
    context.lineTo(450,450);
    context.moveTo(450,400);
    context.lineTo(400,450);
    // Floor
    context.moveTo(500,450);
    context.lineTo(50,450);
context.stroke();

// Hangman stick figure is made visible in 6-steps when function "hangman" is called.
function hangman(num) {
    // num: indexHangman (values 1 to 6) that indicates hangman section to be drawn
    context.strokeStyle = '#000';
    context.lineWidth = 5;
    context.beginPath();
    if (num === 1) {                            // draw Head
        context.arc(250,120,50,0,2*Math.PI);
    }
    else if (num === 2) {                       // draw Trunk
        context.moveTo(250,170);
        context.lineTo(250,310);
    }
    else if (num === 3) {                       // draw Left Arm
        context.moveTo(250,220);
        context.lineTo(145,165);
    }
    else if (num === 4) {                       // draw Right Arm
        context.moveTo(250,220);
        context.lineTo(355,165);
    }
    else if (num === 5) {                       // draw Left Leg
        context.moveTo(250,310);
        context.lineTo(165,395);
    }
    else if (num === 6) {                       // draw Right Leg
        context.moveTo(250,310);
        context.lineTo(335,395);
    }
    context.stroke();
    lostGame();
}

// Hangman stick figure is deleted when function "deleteHangman" is called when "START" button
// is clicked on (see function "start").
function deleteHangman() {
    void context.clearRect(140, 70, 220, 335);
}

// "START" Button Calls the "start" function:
function start() {
    deleteHangman();
    indexHangman = 0;
    indexWord = generateRandomIndex();
    wordArray = wordLibrary[indexWord].split("");
    numberOfLetters = wordArray.length;
    document.getElementById('letterInputForm').className = 'formVisible';
    initializeCorrectGuessDisplay();
    initializeIncorrectGuessDisplay();
    // Make START button invisible after game starts (PENDING)
    // Rename START button to START NEW GAME when game ends (PENDING)
}

// Function "generateRandomIndex" randomly generates array-index to select word to be guessed
// from "wordLibrary". The function is called when "START" button is clicked on (see function "START").
function generateRandomIndex() {
    // returns random integer value from 0 to (wordLibrary.length - 1)
    return Math.round((Math.random())*(wordLibrary.length-1));
}

// Function "initializeCorrectGuessDisplay" initializes <pre> HTML "correctLetters"
// element with empty dashes:
function initializeCorrectGuessDisplay() {
    var initialDisplay = "";
    for (var i=1; i < numberOfLetters + 1; i++) {
        initialDisplay = initialDisplay.concat(' <u> </u>');
        guessStatus[i] = false;     // initialize array "guessStatus"
    };
    correctLetters.innerHTML = initialDisplay;
}

// Function is called by form's button "SUBMIT"
function checkLetterInput() {
    var letter = document.getElementById('letterInput').value;
    var display = "";
    var letterMatch = false;      // becomes true if letter being tested is a match.
    //var positionCorrectLetters = [];  // array indicating position of correct guess(es) for this letter
    for (var i=0; i < wordArray.length; i++) {
        if (guessStatus[i] || (letter.toUpperCase() === wordArray[i].toUpperCase()) ) {
            display = display.concat(' <u>' + wordArray[i].toUpperCase() + '</u>');
            guessStatus[i] = true;
            if (letter.toUpperCase() === wordArray[i].toUpperCase()) {
                letterMatch = true;
            };
        }
        else {
            display = display.concat(' <u> </u>');
        };
    };
    correctLetters.innerHTML = display;
    if (!letterMatch) {
            indexHangman++;
            hangman(indexHangman);
            updateIncorrectGuessDisplay(letter);
    };
}

// Function is called by form button "SOLVE PUZZLE"
function checkWordInput() {
    var word = document.getElementById('wordInput').value;

    // PENDING FINISH WRITING FUNCTION
}

function lostGame() {

}

function initializeIncorrectGuessDisplay() {
    var initialDisplay = "";
    incorrectLetters.innerHTML = initialDisplay;
}

function updateIncorrectGuessDisplay(incorrectLetter) {
    // PENDING FINISHING THIS FUNCTION
    // incorrectLetters.innerHTML = display;
}

 function showWordInputForm() {
     document.getElementById('letterInputForm').className = 'formHide';
     document.getElementById('wordInputForm').className = 'formVisible';

     // PENDING FINISHING THIS FUNCTION

 }
