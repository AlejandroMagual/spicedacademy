/*  FUTURE IMPROVEMENTS:
    1.- Page layout and presentation.
    2.- Function "checkLetterInput" does not check for single-entry input.
    3.- Comments (keep them as brief as possible).
*/

// Collection of words available for the game:
var wordLibrary = ['bankruptcy','engagement','justice','conscience','rhythm','millennium'];

var wordArray = [];     // This array will contain the characters of the selected word.

// Indexes:
var indexHangman;   // integer (values 0 to 6) that counts the number of incorrect guesses at any
                    // time. It is initialized to "0" when "START" button is clicked on (see function
                    // "start"). It is also used (values 1 to 6) to draw the respective hangman
                    // stick figure section when an incorrect guess is made (see function "hangman").

var indexWord;      // array-index to select word to be guessed in the game from "wordLibrary".
                    // It is randomly generated by function "generateRandomIndex" when
                    // "START" button is clicked on (see function "start").

var indexMatchCounter;

// Get <pre> HTML element, which will be updated to display the correctly guessed letters:
var correctLetters = document.getElementById('correctGuessDisplay');

// Get <pre> HTML element, which will be updated to display the worngly guessed letters:
var incorrectLetters = document.getElementById('incorrectGuessDisplay');
var crossingOverlay = document.getElementById('crossingDisplay');

var displayIncorrectLetters;
var displayCrossingOverlay;

var guessStatus = [];   // boolean array of length same as wordArray; the positions where the letter
                        // has been guessed correctly are assigned "true"

// Miscellaneous Variables:
var numberOfLetters;    // the number of letters in selected word. It is defined when "START"
                        // button is clicked on (see function "start").

// Hangman stick figure's frame, rope and floor are always visible:
var context = document.getElementById('canv').getContext('2d');
context.strokeStyle = '#000';
context.lineWidth = 5;
context.beginPath();
// Rope and Frame
context.moveTo(300,70);
context.lineTo(300,10);
context.lineTo(100,10);
context.lineTo(100,450);
context.moveTo(100,60);
context.lineTo(150,10);
// Floor
context.moveTo(500,450);
context.lineTo(50,450);
context.stroke();

function hangman(num) {
    context.strokeStyle = '#000';
    context.lineWidth = 5;
    context.beginPath();
    if (num === 1) {                            // draw Head
        context.arc(300,120,50,0,2*Math.PI);
    }
    else if (num === 2) {                       // draw Trunk
        context.moveTo(300,170);
        context.lineTo(300,310);
    }
    else if (num === 3) {                       // draw Left Arm
        context.moveTo(300,220);
        context.lineTo(195,165);
    }
    else if (num === 4) {                       // draw Right Arm
        context.moveTo(300,220);
        context.lineTo(405,165);
    }
    else if (num === 5) {                       // draw Left Leg
        context.moveTo(300,310);
        context.lineTo(215,395);
    }
    else if (num === 6) {                       // draw Right Leg
        context.moveTo(300,310);
        context.lineTo(385,395);
    }
    context.stroke();
}

function deleteHangman() {
    void context.clearRect(190, 65, 220, 335);
    context.beginPath();
    context.moveTo(300,65);
    context.lineTo(300,70);
    context.stroke();
}

function start() {
    deleteHangman();
    indexHangman = 0;
    indexWord = generateRandomIndex();
    wordLibrary[indexWord] = wordLibrary[indexWord].toUpperCase();
    wordArray = wordLibrary[indexWord].split("");
    numberOfLetters = wordArray.length;
    indexMatchCounter = 0;
    guessStatus = [];
    document.getElementById('letterInputForm').className = 'visible';
    document.getElementById('wordInputForm').className = 'hide';
    initializeCorrectGuessDisplay();
    initializeIncorrectGuessDisplay();
    document.getElementById('gameLostDisplay').className = 'hide';
    document.getElementById('gameWinDisplay').className = 'hide';
    displayIncorrectLetters = "";
    displayCrossingOverlay = "";
    document.getElementById('start').className ='hide';
}

function generateRandomIndex() {
    return Math.round((Math.random())*(wordLibrary.length-1));
}

function initializeCorrectGuessDisplay() {
    var initialDisplay = "";
    for (var i=1; i < numberOfLetters + 1; i++) {
        initialDisplay = initialDisplay.concat(' <u> </u>');
        guessStatus[i] = false;     // initialize array "guessStatus"
    }
    correctLetters.innerHTML = initialDisplay;
}

function checkLetterInput() {
    var letter = document.getElementById('letterInput').value;
    document.getElementById('letterInput').value = "";
    var display = "";
    var matchCounter = 0;
    for (var i=0; i < wordArray.length; i++) {
        if (guessStatus[i] || (letter.toUpperCase() === wordArray[i]) ) {
            display = display.concat(' <u>' + wordArray[i] + '</u>');
            if ( !(guessStatus[i]) && (letter.toUpperCase() === wordArray[i]) ) {
                guessStatus[i] = true;
                matchCounter++;
                indexMatchCounter++;
            }
        }
        else {
            display = display.concat(' <u> </u>');
        }
    }
    correctLetters.innerHTML = display;
    if (matchCounter === 0) {
        indexHangman++;
        hangman(indexHangman);
        updateIncorrectGuessDisplay(letter);
        if (indexHangman === 6) {
            lostGame();
        }
    }
    if (indexMatchCounter === numberOfLetters) {
        wonGame();
    }
}

function checkWordInput() {
    var word = document.getElementById('wordInput').value;
    document.getElementById('wordInput').value = "";
    if (wordLibrary[indexWord].toUpperCase() === word.toUpperCase()) {
        wonGame();
        displaySolution(true);
    }
    else {
        lostGame();
    }
}

function lostGame() {
    for (var i = indexHangman+1; i < 7; i++) {
        hangman(i);
    }
    displaySolution(false);
    document.getElementById('gameLostDisplay').className = 'visible';
    document.getElementById('start').innerHTML = 'START NEW GAME';
    document.getElementById('start').className = 'visible';
    document.getElementById('letterInputForm').className = 'hide';
    document.getElementById('wordInputForm').className = 'hide';
}

function wonGame() {
    document.getElementById('gameWinDisplay').className = 'visible';
    document.getElementById('start').innerHTML = 'START NEW GAME';
    document.getElementById('start').className = 'visible';
    document.getElementById('letterInputForm').className = 'hide';
    document.getElementById('wordInputForm').className = 'hide';
}

function initializeIncorrectGuessDisplay() {
    incorrectLetters.innerHTML = "";
    crossingOverlay.innerHTML = "";
}

function updateIncorrectGuessDisplay(x) {
    displayIncorrectLetters = displayIncorrectLetters.concat(' ' + x.toLowerCase());
    displayCrossingOverlay = displayCrossingOverlay.concat(' /');
    incorrectLetters.innerHTML = displayIncorrectLetters;
    crossingOverlay.innerHTML = displayCrossingOverlay;
}

function showWordInputForm() {
    document.getElementById('letterInputForm').className = 'hide';
    document.getElementById('wordInputForm').className = 'visible';
}

function displaySolution (gameStatus) {
    // gameStatus: boolean, "lostGame" function passes "false" to display whole word with
    //             missing letters in red; "checkWordInput" function passes "true"
    //             to display the whole word in black when correctly guessed.
    var display = "";
    for (var i=0; i < wordArray.length; i++) {
        if (gameStatus) {
            guessStatus[i] = true;
        }
        if (guessStatus[i]) {
            display = display.concat(' <u>' + wordArray[i] + '</u>');
        }
        else {
            display = display.concat(' <u><span style="color:red">' + wordArray[i] + '</span></u>');
        }
    }
    correctLetters.innerHTML = display;
}
